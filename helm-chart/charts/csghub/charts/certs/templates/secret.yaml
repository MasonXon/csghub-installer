{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{ $secret := include "common.names.custom" . }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secret }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: kubernetes.io/tls
data:
  {{- $secretData := (lookup "v1" "Secret" .Release.Namespace $secret).data }}
  {{- $ca := genCA .Values.caName 3650 -}}
  {{- $cert := genSignedCert (printf "*.%s" .Values.global.domain) (list "0.0.0.0") (printf "*.%s" .Values.global.domain | list) 3650 $ca }}
  {{- $tlsCrt := $cert.Cert | b64enc }}
  {{- $tlsKey := $cert.Key | b64enc }}
  {{- $caCrt := $ca.Cert | b64enc }}
  {{- if $secretData }}
  {{- $tlsCrt = index $secretData "tls.crt" }}
  {{- $tlsKey = index $secretData "tls.key" }}
  {{- $caCrt = index $secretData "ca.crt" }}
  {{- end }}
  tls.crt: {{ $tlsCrt }}
  tls.key: {{ $tlsKey }}
  ca.crt: {{ $caCrt }}
---
{{ $secret = include "common.names.custom" (list . "proxy-certs") }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secret }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: kubernetes.io/tls
data:
  {{- $domainList := list }}
  {{- $ipList := list }}
  {{- range .Values.global.runner.internalDomain }}
  {{- $domain := printf "*.%s.%s" $.Values.global.runner.namespace .domain }}
  {{- $domainList = append $domainList $domain }}
  {{- $ipList = append $ipList .host }}
  {{- end }}
  {{- $ca = genCA .Values.caName 3650 -}}
  {{- $cert = genSignedCert (index $domainList 0) $ipList $domainList 3650 $ca }}
  {{- $tlsCrt = $cert.Cert | b64enc }}
  {{- $tlsKey = $cert.Key | b64enc }}
  {{- $caCrt = $ca.Cert | b64enc }}
  {{- $secretData = (lookup "v1" "Secret" .Release.Namespace $secret).data }}
  {{- if $secretData }}
  {{- $tlsCrt = index $secretData "tls.crt" }}
  {{- $tlsKey = index $secretData "tls.key" }}
  {{- $caCrt = index $secretData "ca.crt" }}
  {{- end }}
  tls.crt: {{ $tlsCrt }}
  tls.key: {{ $tlsKey }}
  ca.crt: {{ $caCrt }}
