{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- $global := .Values.global.postgresql }}
{{- $local := omit .Values "global" "exports" }}
{{- $merged := merge $global $local }}
{{- if $merged.enabled }}
{{- $secret := (include "names.secret" .) -}}
{{- $secretData := (lookup "v1" "Secret" .Release.Namespace $secret).data }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "names.cm.init" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
data:
  initialize.sql: |
    {{- range $username := $merged.databases }}
    {{- if ne $username "postgres" }}
    {{- $database := printf "%s_production" $username }}
    {{- $password := include "postgresql.initPass" $database }}
    {{- if $secretData }}
    {{- $password = index $secretData $username | b64dec }}
    {{- end }}
    -- Create database {{ $database }} owner {{ $username }}
    CREATE USER {{ $username | quote }} WITH ENCRYPTED PASSWORD {{ $password | squote }} CREATEDB;
    CREATE DATABASE {{ $database }} ENCODING 'UTF-8' OWNER {{ $username | quote }};
    GRANT ALL PRIVILEGES ON DATABASE {{ $database }} TO {{ $username | quote }};
    {{- end }}
    {{- end }}
    -- Update database parameters
    {{- range $param, $value := $merged.parameters }}
    {{- if and $param $value }}
    ALTER SYSTEM SET {{ $param }} TO {{ $value | squote }};
    {{- end }}
    {{- end }}
    SELECT pg_reload_conf();
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "names.cm" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
data:
  POSTGRES_USER: "postgres"
  POSTGRES_DB: "postgres"
  PGDATA: "/var/lib/postgresql/data"
{{- end }}