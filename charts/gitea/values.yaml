# Default values for csghub-git.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
enabled: true

## Gitea image configuration
## Here you can specify the repository, pull policy, and tag for the Gitea image.
image:
  repository: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/csghub_git
  pullPolicy: IfNotPresent # The pull policy for the image
  ## Overrides the image tag whose default is the chart appVersion.
  tag: latest # The specific version tag of the Gitea image
  ## Image pull secrets for accessing private Docker registries
  ## This is necessary if your Gitea image is stored in a private repository that requires authentication.
  pullSecrets: []

# Open external listening ports
service:
  type: ClusterIP
  ports:
    http: 3001
    ssh: 22

## Authentication details for accessing external services or registries
## This section is commented out by default. Uncomment and fill in your details if needed.
authentication:
  username: "gitea"
  password: ""
  email: "gitea@example.com"

## Configuration for PostgreSQL database connection
## Gitea requires a database to store its data. This section allows you to configure the connection to a PostgreSQL database.
## Uncomment and fill in your database connection details.
postgresql:
  host: ""
  port: ""
  database: ""
  username: ""
  password: ""
  ssl: ""

## Configuration for S3 storage connection
## Gitea can use S3 (or compatible) storage for repository data. Configure your S3 connection details here.
## Uncomment and fill in your S3 storage details.
objectStorage:
  type: ""
  endpoint: ""
  accessKey: ""
  accessSecret: ""
  bucket: ""
  region: ""
  ssl: false

## Configure SMTP to support email sending
## Gitea can send emails for notifications, account recovery, etc. Configure your SMTP server details here.
smtp:
  enabled: false # Enable or disable SMTP
  from: ""
  host: ""
  port: ""
  user: ""
  password: ""

## Configuration for persistence using Persistent Volume Claims
persistence:
  ## Enable persistence (true or false)
  enabled: true
  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  storageClass: ""
  ## Access mode for the Persistent Volume
  accessMode:
    - ReadWriteOnce
  ## Size of the Persistent Volume
  size: 1Gi

## Enable debug mode (true or false)
debug: false

## Configuration for security context
securityContext:
  ## User ID to run the pod as
  runAsUser: 0
  ## Group ID to run the pod as
  runAsGroup: 0
  ## Filesystem group ID
  fsGroup: 0

## Configuration for pod security context
podSecurityContext:
  ## Allow the pod to run in privileged mode (true or false)
  privileged: true
  ## Allow privilege escalation (true or false)
  allowPrivilegeEscalation: true
  ## Set the root filesystem of the pod to read-only (true or false)
  readOnlyRootFilesystem: false

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

# Defined environment
environments: {}

annotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
