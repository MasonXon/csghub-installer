{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- $global := .Values.global.postgresql }}
{{- $local := omit .Values "global" "exports" }}
{{- $merged := merge $global $local }}
{{- if $merged.enabled }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "names.sts" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
  {{- with $merged.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  serviceName: {{ include "names.hl.svc" . }}
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/postgres-configmaps.yaml") . | sha256sum }}
        {{- with $merged.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      {{- with (default .Values.global.imagePullSecrets $merged.image.pullSecret) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $merged.securityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      {{- if $merged.serviceAccount.create }}
      serviceAccountName: {{ include "names.sa" . }}
      automountServiceAccountToken: {{ $merged.serviceAccount.automount }}
      {{- end }}
      containers:
        - securityContext:
          {{- toYaml $merged.podSecurityContext | nindent 12 }}
          name: {{ include "common.names.name" . }}
          image: {{ $merged.image.repository }}:{{ $merged.image.tag }}
          imagePullPolicy: {{ $merged.image.pullPolicy }}
          ports:
            - containerPort: 5432
              name: {{ include "common.names.name" . }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "names.cm" . }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "names.secret" . }}
                  key: postgres
          {{- with $merged.environments }}
          {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml $merged.resources | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U postgres -d postgres -h 127.0.0.1 -p 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      {{- with $merged.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $merged.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $merged.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "common.labels.standard" . | nindent 10 }}
        annotations:
          "helm.sh/resource-policy": keep
      spec:
        accessModes: {{ $merged.persistence.accessMode }}
        {{- if $merged.persistence.storageClass }}
        storageClassName: {{ $merged.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ $merged.persistence.size }}
{{- end }}