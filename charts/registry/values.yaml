# Default values for Registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
enabled: true

## Number of replicas for the Docker Registry deployment
replicas: 1

image:
  ## The Docker Registry image repository
  repository: registry
  ## The Docker Registry image tag
  tag: "2.8.3"
  ## The pull policy for the Docker Registry image
  pullPolicy: "IfNotPresent"
  ## Image pull secrets for accessing private Docker registries
  pullSecret: [ ]

service:
  ## The type of service to expose the Docker Registry
  type: ClusterIP
  ## The port on which the Docker Registry service is exposed
  port: 5000
  ## If expose
  nodePort: 32000

authentication:
  ## Username for Docker Registry authentication
  username: "registry"
  ## Password for Docker Registry authentication
  password: ""

## Default namespace to storage images
namespace: ""

ingress:
  ## Enable ingress for the Docker Registry
  enabled: true
  className: "nginx"
  ## Hostname for the Docker Registry ingress
  host: registry.msens.cn
  tls:
    enabled: false
    verify: false
    secretName: ""
    annotations: {}

persistence:
  ## Enable persistence using Persistent Volume Claims
  enabled: true
  ## Persistent Volume Storage Class for Docker Registry data
  storageClass: ""
  ## Access mode for the Persistent Volume
  accessMode:
    - ReadWriteOnce
  ## Size of the Persistent Volume
  size: 10Gi

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# If you use this registry for production testing,
# you need to provide a trusted tls certificate so that k8s can pull the image through this
tls:
  enabled: false
  secretName: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Defined environment
environments: {}

annotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
