{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- $global := .Values.global.proxy }}
{{- $local := omit .Values "global" "exports" }}
{{- $merged := merge $global $local }}
{{- if .Values.global.ingress.enabled }}
{{- $apiVersion := include "common.capabilities.ingress.apiVersion" . }}
apiVersion: {{ $apiVersion }}
kind: Ingress
metadata:
  name: {{ include "names.ing" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Host, X-Real-IP, X-Forwarded-Proto, X-Forwarded-Host, X-Forwarded-For"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    nginx.ingress.kubernetes.io/custom-http-errors: "500, 502, 503, 504"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/server-tokens: "false"
    nginx.ingress.kubernetes.io/use-gzip: "true"
    nginx.ingress.kubernetes.io/gzip-disable: "msie6"
    nginx.ingress.kubernetes.io/gzip-level: "6"
    nginx.ingress.kubernetes.io/gzip-min-length: "1100"
    nginx.ingress.kubernetes.io/gzip-types: "text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/json application/xml+rss"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-redirect-from: "off"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "0"
    nginx.ingress.kubernetes.io/types-hash-max-size: "4096"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/keep-alive: "300"
    nginx.ingress.kubernetes.io/client-header-timeout: "300"
    nginx.ingress.kubernetes.io/client-body-timeout: "300"
    {{- if .Values.global.ingress.tls.enabled }}
    nginx.ingress.kubernetes.io/backend-protocol: https
    {{- if .Values.global.ingress.tls.verify }}
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    nginx.ingress.kubernetes.io/proxy-ssl-name: {{ include "names.svc.hl" . }}.{{ .Release.Namespace }}.svc
    {{- if .Values.global.ingress.tls.caSecretName }}
    nginx.ingress.kubernetes.io/proxy-ssl-secret: {{ .Values.global.ingress.tls.secretName }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- with .Values.global.ingress.annotations }}
      {{- toYaml . | toString | nindent 4 }}
    {{- end }}
spec:
  {{- if and .Values.global.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.global.ingress.className }}
  {{- end }}
  {{- if .Values.global.runner.ingress.tls.enabled }}
  tls:
    - hosts:
      - {{ printf "*.%s" (include "external.domain.public" .) | quote }}
      secretName: {{ .Values.global.runner.ingress.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ printf "*.%s" (include "external.domain.public" .) | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
            {{- if eq $apiVersion "networking.k8s.io/v1" }}
              service:
                name: {{ include "names.svc" . }}
                port:
                  number: {{ $merged.service.port }}
            {{- else }}
              serviceName: {{ include "names.svc" . }}
              servicePort:  {{ $merged.service.port }}
            {{- end }}
{{- end }}